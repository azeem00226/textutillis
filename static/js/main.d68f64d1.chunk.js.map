{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","myStyle","color","mode","backgroundColor","border","borderColor","className","style","id","type","Navbar","to","title","href","about","onClick","toggleMode","height","width","cursor","placeholder","htmlFor","TextForm","useState","text","setText","heading","value","onChange","event","console","log","target","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","split","filter","element","defaultProps","Alert","alert","role","msg","App","setMode","setAlert","message","setTimeout","cls","document","body","classList","remove","add","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d68f64d1.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nexport default function About(props) {\r\n\r\n    // const [myStyle,setMyStyle]=useState({\r\n    //     color: 'black',\r\n    //     backgroundColor:'white'\r\n    // })\r\n    let myStyle = {\r\n        color: props.mode === 'dark'?'white': 'black',\r\n        backgroundColor: props.mode === 'dark'? 'rgb(77 110 185)': 'white',\r\n        border: '1px solid',\r\n        borderColor: props.mode === 'dark'?'white': 'rgb(77 110 185)'\r\n    }\r\n    \r\n\r\n  \r\n  return (\r\n      \r\n    <div className=\"container col-md-8 my-5\"  >\r\n        <h1 style={{color: props.mode === 'dark'?'white': 'black',}}  >About Us  </h1>\r\n      <div className=\"accordion accordion-flush\" style={myStyle} id=\"accordionFlushExample\">\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"flush-headingOne\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\" style={myStyle}\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#flush-collapseOne\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"flush-collapseOne\"\r\n            >\r\n              Accordion Item #1\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"flush-collapseOne\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"flush-headingOne\"\r\n            data-bs-parent=\"#accordionFlushExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle} >\r\n              Placeholder content for this accordion, which is intended to\r\n              demonstrate the <code>.accordion-flush</code> class. This is the\r\n              first item's accordion body.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"flush-headingTwo\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\" style={myStyle}\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#flush-collapseTwo\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"flush-collapseTwo\"\r\n            >\r\n              Accordion Item #2\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"flush-collapseTwo\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"flush-headingTwo\"\r\n            data-bs-parent=\"#accordionFlushExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle} >\r\n              Placeholder content for this accordion, which is intended to\r\n              demonstrate the <code>.accordion-flush</code> class. This is the\r\n              second item's accordion body. Let's imagine this being filled with\r\n              some actual content.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"flush-headingThree\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\" style={myStyle}\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#flush-collapseThree\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"flush-collapseThree\"\r\n            >\r\n              Accordion Item #3\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"flush-collapseThree\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"flush-headingThree\"\r\n            data-bs-parent=\"#accordionFlushExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              Placeholder content for this accordion, which is intended to\r\n              demonstrate the <code>.accordion-flush</code> class. This is the\r\n              third item's accordion body. Nothing more exciting happening here\r\n              in terms of content, but just filling up the space to make it\r\n              look, at least at first glance, a bit more representative of how\r\n              this would look in a real-world application.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n           <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"/about\">{props.about}</a>\r\n          </li>\r\n        </ul>\r\n\r\n      <div className=\"d-flex\">\r\n        <div className=\"bg-primary rounded mx-2\" onClick={()=>{props.toggleMode('primary')}} style={{height:'30px',width:'30px',cursor:'pointer'}}> </div>\r\n        <div className=\"bg-danger rounded mx-2\" onClick={()=>{props.toggleMode('danger')}} style={{height:'30px',width:'30px',cursor:'pointer'}}> </div>\r\n        <div className=\"bg-success rounded mx-2\" onClick={()=>{props.toggleMode('success')}} style={{height:'30px',width:'30px',cursor:'pointer'}}> </div>\r\n        <div className=\"bg-warning rounded mx-2\" onClick={()=>{props.toggleMode('warning')}} style={{height:'30px',width:'30px',cursor:'pointer'}}> </div>\r\n      </div>\r\n\r\n        <form className=\"d-flex\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n        </form>\r\n        <div className={`form-check form-switch text-${props.mode=== 'light'? 'dark': 'light'}`}>\r\n  <input className=\"form-check-input\" onClick={()=>{props.toggleMode('null')}} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n</div>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n        \r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    about: PropTypes.string.isRequired\r\n}\r\nNavbar.defaultProps = {\r\n     title: 'Set title here',\r\n     about:  'Set About here'\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    console.log(\"Uppercase was Clicked\" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"converted to upprcase\",\"success\");\r\n  };\r\n  const handleLoClick = () => {\r\n    console.log(\"lowercase was Clicked\" + text);\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"converted to lowercase\",\"success\");\r\n  };\r\n  const handleClearClick = () => {\r\n    console.log(\"lowercase was Clicked\" + text);\r\n    let newText = '';\r\n    setText(newText);\r\n  }; \r\n  const handleCapitalizedClick = () => {\r\n    console.log(\"capitalized was Clicked\" + text);\r\n    let newText = text.toCapitalizedCase();\r\n    setText(newText);\r\n  }; \r\n  const handleOnChange = (event) => {\r\n    console.log(\"On Change\");\r\n    setText(event.target.value);\r\n  };\r\n  const [text, setText] = useState(\"\");\r\n  return (\r\n    <>\r\n    <div className=\"container col-md-8\" style={{color:props.mode=== 'dark'? 'white': 'black'}}>\r\n      <h1> {props.heading}</h1>\r\n      <div className=\"mb-3\">\r\n        <textarea\r\n          className=\"form-control\"\r\n          value={text} style={{backgroundColor:props.mode=== 'dark'? 'grey': 'white', color:props.mode=== 'dark'? 'white': 'black'}}\r\n          onChange={handleOnChange}\r\n          id=\"myBox\"\r\n          rows=\"8\"\r\n        ></textarea>\r\n      </div>\r\n      <button disabled={text.length===0}  className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>Convert to uppercase</button>\r\n      <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleLoClick}> Convert to lowercase</button>\r\n      <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleClearClick}> Clear text</button>\r\n      {/* <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCapitalizedClick}> Capitalized text</button> */}\r\n    </div>\r\n    <div className=\"container my-3 col-md-8\"  style={{color:props.mode=== 'dark'? 'white': 'black'}}>\r\n    <h2>Ur Text Summary</h2>\r\n    <p>{text.split(/\\s+/).filter((element)=>{return element.length!=0}).length} words and {text.length} characters</p>\r\n    <p>{0.008 * text.split(\" \").filter((element)=>{return element.length!=0}).length} Minutes Read </p>\r\n    \r\n    <h2>Preview</h2>\r\n    <p>{text}</p>\r\n    </div>\r\n    </>\r\n  );\r\n  \r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    return (\r\n        <div style = {{height: '50px'}}>\r\n        {props.alert && \r\n           <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            {props.alert.type}: {props.alert.msg}\r\n            </div>}\r\n            </div>\r\n        \r\n    )\r\n}\r\nexport default Alert\r\n","import \"./App.css\";\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\"); // whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1000);\n  };\n\n  const removeBodyClasses = () => {\n    document.body.classList.remove(\"bg-light\");\n    document.body.classList.remove(\"bg-dark\");\n    document.body.classList.remove(\"bg-warning\");\n    document.body.classList.remove(\"bg-danger\");\n    document.body.classList.remove(\"bg-success\");\n  };\n\n  const toggleMode = (cls) => {\n    removeBodyClasses();\n    console.log(cls);\n    document.body.classList.add(\"bg-\" + cls);\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"rgb(10 33 84)\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = \"TextUtils - Dark Mode\";\n      // setInterval(() => {\n      //   document.title = 'This is textutils';\n      // },2000);\n      // setInterval(() => {\n      //   document.title = 'Install textutils';\n      // },1500);\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.title = \"TextUtils - Light Mode\";\n    }\n  };\n\n  return (\n    <>\n      <Router>\n        <Navbar\n          title=\"Utility2\"\n          about=\"About Us\"\n          mode={mode}\n          toggleMode={toggleMode}\n        />\n        <Alert alert={alert} />\n        <div className=\"container\">\n          <Switch>\n            <Route exact path=\"/about\">\n              <About mode={mode} />\n            </Route>\n            <Route exact path=\"/\">\n              <TextForm\n                showAlert={showAlert}\n                heading=\"Enter Text\"\n                mode={mode}\n              />\n            </Route>\n          </Switch> \n\n         \n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}